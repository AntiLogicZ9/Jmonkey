plugins {
    id 'java'
    id 'application'
}

group 'com.horrorjme'
version '1.0-SNAPSHOT'

// Java version compatibility
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    modularity.inferModulePath = false
}

application {
    mainClass = 'horrorjme.HorrorGameJME'
}

repositories {
    mavenCentral()
}

dependencies {
    // JMonkeyEngine Core - UPDATED TO 3.8.1-stable (LATEST)
    implementation 'org.jmonkeyengine:jme3-core:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-desktop:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-lwjgl3:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-awt-dialogs:3.8.1-stable'

    // JMonkeyEngine Effects and Plugins - UPDATED TO 3.8.1-stable
    implementation 'org.jmonkeyengine:jme3-effects:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-plugins:3.8.1-stable'

    // Audio support - UPDATED TO 3.8.1-stable
    implementation 'org.jmonkeyengine:jme3-jogg:3.8.1-stable'

    // Optional: Terrain and networking if needed - UPDATED TO 3.8.1-stable
    implementation 'org.jmonkeyengine:jme3-terrain:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-networking:3.8.1-stable'
}

tasks.withType(JavaCompile).configureEach {
    // Enable deprecation warnings
    options.compilerArgs << '-Xlint:deprecation'
    options.encoding = 'UTF-8'
}

// Configure the run task
run {
    // JVM arguments for better performance
    jvmArgs = [
            '-Xms512m',
            '-Xmx1024m'
    ]
}

// Create a fat JAR with all dependencies
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'horrorjme.HorrorGameJME'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'com.horrorjme'
version '1.0-SNAPSHOT'

// Java version compatibility
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    modularity.inferModulePath = false
}

application {
    mainClass = 'horrorjme.HorrorGameJME'
    mainClass = 'horrorjme.GameLauncher'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }  // For Minie
    maven { url 'https://dl.bintray.com/jmonkeyengine/org.jmonkeyengine' }
    maven { url 'https://mvnrepository.com/artifact/org.jmonkeyengine/jme3-lwjgl3' }
}

dependencies {
    // JMonkeyEngine Core - UPDATED TO 3.8.1-stable (LATEST)
    implementation 'org.jmonkeyengine:jme3-core:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-desktop:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-lwjgl3:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-awt-dialogs:3.8.1-stable'
    implementation "org.jmonkeyengine:jme3-testdata:3.8.1-stable"

    // JMonkeyEngine Effects and Plugins - UPDATED TO 3.8.1-stable
    implementation 'org.jmonkeyengine:jme3-effects:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-plugins:3.8.1-stable'

    // Audio support - UPDATED TO 3.8.1-stable
    implementation 'org.jmonkeyengine:jme3-jogg:3.8.1-stable'

    // Optional: Terrain and networking if needed - UPDATED TO 3.8.1-stable
    implementation 'org.jmonkeyengine:jme3-terrain:3.8.1-stable'
    implementation 'org.jmonkeyengine:jme3-networking:3.8.1-stable'
    implementation "com.github.stephengold:Minie:9.0.1"
    implementation "org.jmonkeyengine:jme3-blender:3.3.2-stable"     // Blender file support
    //implementation("org.jmonkeyengine:jme3-lwjgl3-openal:3.8.1-stable")


}


// Runtime JVM arguments optimized for physics games
run {

    // System properties for JME + Minie
    systemProperties = [
            'org.lwjgl.util.Debug': 'false',                    // Disable LWJGL debug
            'org.lwjgl.util.NoChecks': 'true',                  // Disable LWJGL checks for performance
            'jme3.renderer.caps.InstancedRendering': 'true',    // Enable instanced rendering
            'minie.enableDebugMode': 'false'                     // Disable Minie debug visualization
    ]
}

tasks.withType(JavaCompile).configureEach {
    // Enable deprecation warnings
    options.compilerArgs << '-Xlint:deprecation'
    options.encoding = 'UTF-8'
}

run {
    // JVM arguments for JavaFX (if needed)
    jvmArgs = [
            '--add-exports', 'javafx.base/com.sun.javafx.runtime=ALL-UNNAMED'
    ]}

// Configure the run task
/* run {
    // JVM arguments for better performance
    jvmArgs = [
            '-Xms512m',
            '-Xmx1024m'
    ]
} */

// Create a fat JAR with all dependencies
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'horrorjme.HorrorGameJME'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}